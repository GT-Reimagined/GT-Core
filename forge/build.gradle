archivesBaseName = "${rootProject.archive_base_name}-forge"
version = "${project.mod_version}-${rootProject.minecraft_version}"

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").file("src/main/resources/gtcore.accesswidener")
}

dependencies {
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    modImplementation("io.github.gregtechintergalactical:antimatter-forge:${antimatter_version}"){
        //exclude(group: "mezz.jei")
    }
    common(project(path: ":common", configuration: "namedElements"))
    shadowCommon(project(path: ":common", configuration: "transformProductionForge"))
    //modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-forge:${rootProject.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-forge:${rootProject.rei_version}"
    modCompileOnly("curse.maven:terrafirmacraft-302973:4723717")
    modImplementation(include("com.github.Reforged-Mods.Terraform-Reforged:terraform-wood-api-v1:${project.terraform_version_forge}"))
    //modRuntimeOnly("mezz.jei:jei-${rootProject.minecraft_version}-forge:${rootProject.jei_version}")
    implementation 'com.github.Carbon-Config-Project:CarbonConfigLib:1.0.0'
    modRuntimeOnly("curse.maven:the-twilight-forest-227639:4337390")
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}
