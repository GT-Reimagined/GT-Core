import org.gradle.api.tasks.compile.JavaCompile

plugins {
    id "fabric-loom" version "1.7.+"
}
archivesBaseName = "${rootProject.archive_base_name}-fabric"


def accessWidenerFile = project(":common").file("src/main/resources/gtcore.accesswidener")


loom {
    accessWidenerPath = accessWidenerFile
    mixin {
        defaultRefmapName = "gtcore.refmap.json"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.mappings_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    implementation(project(path: ":common"))
    modImplementation("io.github.gregtechintergalactical:antimatter-fabric:${antimatter_version}"){
        exclude(group: "maven.modrinth")
        exclude(group: "TechReborn")
        exclude(group: "com.github.Trins-mods")
        exclude(group: "com.github.Trinsdar")
    }
    modImplementation("org.gt-reimagined:tesseract-fabric:${tesseract_version}"){
        exclude(group: "maven.modrinth")
        exclude(group: "com.github.Trins-mods")
    }
    modImplementation("earth.terrarium:botarium-fabric-1.18.2:${project.botarium_version}")
    modImplementation("org.gt-reimagined:structurelib-fabric:${project.structurelib_version}-${project.minecraft_version}")
    modImplementation "com.teamresourceful.resourcefullib:resourcefullib-fabric-1.18.2:${project.resourcefullib_version}"
    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:${rootProject.port_lib_version}-beta+1.18.2-stable")){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.github.LlamaLad7")
    }
    modImplementation(include("com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_version_fabric}"))
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rootProject.rei_version}"
    modCompileOnlyApi("mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}")
    modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}")
    modCompileOnly("curse.maven:the-one-probe-fabric-581847:${project.top_fabric_file}")
    modImplementation "maven.modrinth:carbon-config:${project.carbon_config_fabric_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.rei_version}"
}

processResources {
    from project(":common").sourceSets.main.resources
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.named('compileJava', JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

sourcesJar {
    from(project(':common').sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            artifactId = "gtcore-" + project.name
            //from components.java
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact jar
            afterEvaluate {
                artifact remapJar
            }
        }
    }
    repositories {
        def isCI = System.getenv("CI")
        if (isCI) {
            maven {
                url System.getenv("local_maven_url")
            }
        } else {
            mavenLocal()
        }
    }
}